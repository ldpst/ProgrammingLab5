plugins {
    id 'java'
    id 'application'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'com.github.stefanbirkner:system-lambda:1.2.1'

    implementation 'com.google.inject:guice:5.1.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
}

ext.sharedManifest = manifest {
    attributes("Implementation-Title": "Gradle",
            "Implementation-Version": version)
}

run {
    standardInput = System.in
}

test {
    testLogging.showStandardStreams = true
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

tasks.register('fatJar', Jar) {
    archiveClassifier = 'fat'

    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes['Main-Class'] = application.mainClass
    }

    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'ru.itmo.prog.lab5.Main'
}